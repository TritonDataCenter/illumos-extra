diff -ru a/fdname.c b/fdname.c
--- a/fdname.c	2021-01-03 13:23:22.000000000 -0500
+++ b/fdname.c	2021-11-18 15:12:43.000000000 -0500
@@ -232,7 +232,10 @@
    /*Linux struct ifreq ifc = {{{ 0 }}};*/
    struct ifreq ifc = {{ 0 }};
 #endif
+
+#ifndef __sun
    int rc;
+#endif
 
 #if defined(SO_PROTOCOL) || defined(SO_PROTOTYPE)
    optlen = sizeof(proto);
@@ -254,12 +257,20 @@
 
 #if defined(SO_PROTOCOL) || defined(SO_PROTOTYPE)
 #if HAVE_GETPROTOBYNUMBER_R
+#ifdef __sun
+   protoentp = getprotobynumber_r(proto, &protoent, protoname, sizeof(protoname));
+#else
    rc = getprotobynumber_r(proto, &protoent, protoname, sizeof(protoname), &protoentp);
+#endif
    if (protoentp == NULL) {
+#ifdef __sun
+      Warn1("sockname(): getprotobynumber_r(proto=%d, ...)", proto);
+#else
       Warn2("sockname(): getprotobynumber_r(proto=%d, ...): %s",
 	    proto, strerror(rc));
+#endif
    }
-   strncpy(protoname, protoentp->p_name, sizeof(protoname));
+   else (void) sprintf(protoname, "proto%d", proto);
 #elif HAVE_GETPROTOBYNUMBER
    protoentp = getprotobynumber(proto);
    strncpy(protoname, protoentp->p_name, sizeof(protoname));
diff -ru a/sysincludes.h b/sysincludes.h
--- a/sysincludes.h	Sun Jan  3 13:23:22 2021
+++ b/sysincludes.h	Thu Nov 21 17:57:37 2024
@@ -162,6 +162,7 @@
 #endif
 #if HAVE_SYS_STROPTS_H
 #include <sys/stropts.h>	/* SunOS I_PUSH ... */
+#include <stropts.h>		/* SunOS isastream() ... */
 #endif
 #if HAVE_REGEX_H
 #include <regex.h>
diff -ru a/configure b/configure
--- a/configure Sun Jan  3 13:23:22 2021
+++ b/configure Wed Dec 18 11:58:10 2024
@@ -7136,11 +7136,12 @@
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 #include <sys/socket.h>
+#include <stdio.h>
 int
 main ()
 {
-int i=CMSG_DATA(0)
-  ;
+unsigned char *cp=CMSG_DATA(0);
+(void) printf("cp is %p\n", cp);
   return 0;
 }
 _ACEOF
@@ -7151,11 +7152,12 @@
 /* end confdefs.h.  */
 #define _XPG4_2 1
 #include <sys/socket.h>
+#include <stdio.h>
 int
 main ()
 {
-int i=CMSG_DATA(0)
-  ;
+unsigned char *cp=CMSG_DATA(0);
+(void) printf("cp is %p\n", cp);
   return 0;
 }
 _ACEOF
