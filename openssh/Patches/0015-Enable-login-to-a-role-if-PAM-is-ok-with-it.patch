From 326be58a153548e8218d1cdc2b0224612814d63f Mon Sep 17 00:00:00 2001
From: oracle <solaris@oracle.com>
Date: Mon, 3 Aug 2015 14:38:19 -0700
Subject: [PATCH 15/35] Enable login to a role if PAM is ok with it

---
 auth-pam.c        | 14 ++++++++++++++
 auth-pam.h        |  4 ++++
 auth.h            |  3 +++
 auth2-hostbased.c | 10 ++++++++++
 auth2.c           |  8 ++++++++
 monitor.c         | 14 ++++++++++++++
 6 files changed, 53 insertions(+)

diff --git a/auth-pam.c b/auth-pam.c
index 01f62036..cf692526 100644
--- a/auth-pam.c
+++ b/auth-pam.c
@@ -1149,6 +1149,20 @@ do_pam_account(void)
 	return (sshpam_account_status);
 }
 
+#ifdef HAVE_PAM_AUSER
+void
+do_pam_set_auser(const char* auser)
+{
+	if (auser != NULL) {
+		debug("PAM: setting PAM_AUSER to \"%s\"", auser);
+		sshpam_err = pam_set_item(sshpam_handle, PAM_AUSER, auser);
+		if (sshpam_err != PAM_SUCCESS)
+			error("PAM: failed to set PAM_AUSER: %s",
+			    pam_strerror(sshpam_handle, sshpam_err));
+	}
+}
+#endif
+
 void
 do_pam_setcred(int init)
 {
diff --git a/auth-pam.h b/auth-pam.h
index 41986074..f5d2092f 100644
--- a/auth-pam.h
+++ b/auth-pam.h
@@ -31,6 +31,10 @@ void start_pam(Authctxt *);
 void finish_pam(void);
 u_int do_pam_account(void);
 void do_pam_session(struct ssh *);
+#ifdef HAVE_PAM_AUSER
+void do_pam_set_auser(const char *);
+#endif
+void do_pam_set_tty(const char *);
 void do_pam_setcred(int );
 void do_pam_chauthtok(void);
 int do_pam_putenv(char *, char *);
diff --git a/auth.h b/auth.h
index 34e69270..607aecfa 100644
--- a/auth.h
+++ b/auth.h
@@ -99,6 +99,9 @@ struct Authctxt {
 #ifdef PAM_ENHANCEMENT
 	char		*authmethod_name;
 #endif
+#ifdef HAVE_PAM_AUSER
+	char		*auser;
+#endif
 };
 
 /*
diff --git a/auth2-hostbased.c b/auth2-hostbased.c
index 764ceff7..e3502b93 100644
--- a/auth2-hostbased.c
+++ b/auth2-hostbased.c
@@ -80,6 +80,9 @@ userauth_hostbased(struct ssh *ssh)
 #ifdef DEBUG_PK
 	debug("signature:");
 	sshbuf_dump_data(sig, slen, stderr);
+#endif
+#ifdef HAVE_PAM_AUSER
+	authctxt->auser = NULL;
 #endif
 	pktype = sshkey_type_from_name(pkalg);
 	if (pktype == KEY_UNSPEC) {
@@ -152,6 +155,13 @@ userauth_hostbased(struct ssh *ssh)
 	    sshbuf_ptr(b), sshbuf_len(b), pkalg, ssh->compat)) == 0)
 		authenticated = 1;
 
+#ifdef HAVE_PAM_AUSER
+	if (authenticated) {
+		authctxt->auser = cuser;
+		cuser = NULL;
+	}
+#endif
+
 	auth2_record_key(authctxt, authenticated, key);
 	sshbuf_free(b);
 done:
diff --git a/auth2.c b/auth2.c
index 15ba3da2..e9bfd241 100644
--- a/auth2.c
+++ b/auth2.c
@@ -393,6 +393,14 @@ userauth_finish(struct ssh *ssh, int authenticated, const char *method,
 #endif
 	}
 
+#ifdef HAVE_PAM_AUSER
+	if (!use_privsep) {
+		do_pam_set_auser(authctxt->auser);
+		free(authctxt->auser);
+		authctxt->auser = NULL;	
+	}
+#endif
+
 	if (authenticated && options.num_auth_methods != 0) {
 
 #if defined(USE_PAM) && defined(PAM_ENHANCEMENT)
diff --git a/monitor.c b/monitor.c
index 426a5736..0190d034 100644
--- a/monitor.c
+++ b/monitor.c
@@ -402,6 +402,12 @@ monitor_child_preauth(Authctxt *_authctxt, struct monitor *pmonitor)
 		}
 	}
 
+#if defined(HAVE_PAM_AUSER) && defined(USE_PAM)
+	if (hostbased_cuser != NULL) {
+		free(hostbased_cuser);
+		hostbased_cuser = NULL;
+	}
+#endif
 	if (!authctxt->valid)
 		fatal("%s: authenticated invalid user", __func__);
 	if (strcmp(auth_method, "unknown") == 0)
@@ -612,7 +618,10 @@ monitor_reset_key_state(void)
 {
 	/* reset state */
 	free(key_blob);
+#if !defined(HAVE_PAM_AUSER) || !defined(USE_PAM)
 	free(hostbased_cuser);
+	hostbased_cuser = NULL;
+#endif
 	free(hostbased_chost);
 	sshauthopt_free(key_opts);
 	key_blob = NULL;
@@ -1064,6 +1073,11 @@ mm_answer_pam_account(int sock, struct sshbuf *m)
 	if (!options.use_pam)
 		fatal("%s: PAM not enabled", __func__);
 
+#ifdef HAVE_PAM_AUSER
+	if (hostbased_cuser != NULL)
+		do_pam_set_auser(hostbased_cuser);
+#endif
+
 	ret = do_pam_account();
 
 	if ((r = sshbuf_put_u32(m, ret)) != 0 ||
-- 
2.22.0

