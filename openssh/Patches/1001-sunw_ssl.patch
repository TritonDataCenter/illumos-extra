From ac960b9ba3f80d0b7af61198a964f9a03906e929 Mon Sep 17 00:00:00 2001
From: Dan McDonald <danmcd@mnx.io>
Date: Thu, 10 Aug 2023 18:11:52 -0400
Subject: [PATCH] [PATCH 32/32] SmartOS local: use sunw_ssl lib from platform

---
 cipher-chachapoly-libcrypto.c        |  4 +--
 cipher-chachapoly.c                  |  4 +--
 configure.ac                         | 46 ++++++++++++++--------------
 digest-openssl.c                     |  6 ++--
 kex.c                                |  8 ++---
 openbsd-compat/libressl-api-compat.c | 16 +++++-----
 openbsd-compat/openssl-compat.h      | 14 ++++-----
 7 files changed, 49 insertions(+), 49 deletions(-)

diff --git a/cipher-chachapoly-libcrypto.c b/cipher-chachapoly-libcrypto.c
index e8d20c28..2ebd699c 100644
--- a/cipher-chachapoly-libcrypto.c
+++ b/cipher-chachapoly-libcrypto.c
@@ -20,7 +20,7 @@
 #include "openbsd-compat/openssl-compat.h"
 #endif
 
-#if defined(HAVE_EVP_CHACHA20) && !defined(HAVE_BROKEN_CHACHA20)
+#if defined(HAVE_SUNW_EVP_CHACHA20) && !defined(HAVE_BROKEN_CHACHA20)
 
 #include <sys/types.h>
 #include <stdarg.h> /* needed for log.h */
@@ -162,4 +162,4 @@ chachapoly_get_length(struct chachapoly_ctx *ctx,
 	*plenp = PEEK_U32(buf);
 	return 0;
 }
-#endif /* defined(HAVE_EVP_CHACHA20) && !defined(HAVE_BROKEN_CHACHA20) */
+#endif /* defined(HAVE_SUNW_EVP_CHACHA20) && !defined(HAVE_BROKEN_CHACHA20) */
diff --git a/cipher-chachapoly.c b/cipher-chachapoly.c
index 4471fe2d..010de2d3 100644
--- a/cipher-chachapoly.c
+++ b/cipher-chachapoly.c
@@ -20,7 +20,7 @@
 #include "openbsd-compat/openssl-compat.h"
 #endif
 
-#if !defined(HAVE_EVP_CHACHA20) || defined(HAVE_BROKEN_CHACHA20)
+#if !defined(HAVE_SUNW_EVP_CHACHA20) || defined(HAVE_BROKEN_CHACHA20)
 
 #include <sys/types.h>
 #include <stdarg.h> /* needed for log.h */
@@ -135,4 +135,4 @@ chachapoly_get_length(struct chachapoly_ctx *ctx,
 	return 0;
 }
 
-#endif /* !defined(HAVE_EVP_CHACHA20) || defined(HAVE_BROKEN_CHACHA20) */
+#endif /* !defined(HAVE_SUNW_EVP_CHACHA20) || defined(HAVE_BROKEN_CHACHA20) */
diff --git a/configure.ac b/configure.ac
index 495b45c7..27b072d4 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2810,9 +2810,9 @@ AC_ARG_WITH([ssl-engine],
 
 nocrypto_saved_LIBS="$LIBS"
 if test "x$openssl" = "xyes" ; then
-	LIBS="-lcrypto $LIBS"
-	CHANNELLIBS="-lcrypto $CHANNELLIBS"
-	AC_TRY_LINK_FUNC([RAND_add], ,
+	LIBS="-L /usr/lib:${DESTDIR}/usr/lib -lsunw_crypto $LIBS"
+	CHANNELLIBS="-L /usr/lib:${DESTDIR}/usr/lib -lsunw_crypto $CHANNELLIBS"
+	AC_TRY_LINK_FUNC([sunw_RAND_add], ,
 	    [AC_MSG_ERROR([*** working libcrypto not found, check config.log])])
 	AC_CHECK_HEADER([openssl/opensslv.h], ,
 	    [AC_MSG_ERROR([*** OpenSSL headers missing - please install first or check config.log ***])])
@@ -3003,23 +3003,23 @@ if test "x$openssl" = "xyes" ; then
 	)
 
 	AC_CHECK_FUNCS([ \
-		BN_is_prime_ex \
-		DES_crypt \
-		DSA_generate_parameters_ex \
-		EVP_DigestFinal_ex \
-		EVP_DigestInit_ex \
-		EVP_MD_CTX_cleanup \
-		EVP_MD_CTX_copy_ex \
-		EVP_MD_CTX_init \
-		HMAC_CTX_init \
-		RSA_generate_key_ex \
-		RSA_get_default_method \
+		sunw_BN_is_prime_ex \
+		sunw_DES_crypt \
+		sunw_DSA_generate_parameters_ex \
+		sunw_EVP_DigestFinal_ex \
+		sunw_EVP_DigestInit_ex \
+		sunw_EVP_MD_CTX_cleanup \
+		sunw_EVP_MD_CTX_copy_ex \
+		sunw_EVP_MD_CTX_init \
+		sunw_HMAC_CTX_init \
+		sunw_RSA_generate_key_ex \
+		sunw_RSA_get_default_method \
 	])
 
 	# OpenSSL_add_all_algorithms may be a macro.
-	AC_CHECK_FUNC(OpenSSL_add_all_algorithms,
+	AC_CHECK_FUNC(sunw_OpenSSL_add_all_algorithms,
 	    AC_DEFINE(HAVE_OPENSSL_ADD_ALL_ALGORITHMS, 1, [as a function]),
-	    AC_CHECK_DECL(OpenSSL_add_all_algorithms,
+	    AC_CHECK_DECL(sunw_OpenSSL_add_all_algorithms,
 		AC_DEFINE(HAVE_OPENSSL_ADD_ALL_ALGORITHMS, 1, [as a macro]), ,
 		[[#include <openssl/evp.h>]]
 	    )
@@ -3027,11 +3027,11 @@ if test "x$openssl" = "xyes" ; then
 
 	# LibreSSL/OpenSSL API differences
 	AC_CHECK_FUNCS([ \
-		EVP_CIPHER_CTX_iv \
-		EVP_CIPHER_CTX_iv_noconst \
-		EVP_CIPHER_CTX_get_iv \
-		EVP_CIPHER_CTX_get_updated_iv \
-		EVP_CIPHER_CTX_set_iv \
+		sunw_EVP_CIPHER_CTX_iv \
+		sunw_EVP_CIPHER_CTX_iv_noconst \
+		sunw_EVP_CIPHER_CTX_get_iv \
+		sunw_EVP_CIPHER_CTX_get_updated_iv \
+		sunw_EVP_CIPHER_CTX_set_iv \
 	])
 
 	if test "x$openssl_engine" = "xyes" ; then
@@ -3090,7 +3090,7 @@ if test "x$openssl" = "xyes" ; then
 	)
 
 	# Check for various EVP support in OpenSSL
-	AC_CHECK_FUNCS([EVP_sha256 EVP_sha384 EVP_sha512 EVP_chacha20])
+	AC_CHECK_FUNCS([sunw_EVP_sha256 sunw_EVP_sha384 sunw_EVP_sha512 sunw_EVP_chacha20])
 
 	# Check complete ECC support in OpenSSL
 	AC_MSG_CHECKING([whether OpenSSL has NID_X9_62_prime256v1])
@@ -3170,7 +3170,7 @@ if test "x$openssl" = "xyes" ; then
 	if test x$enable_nistp256 = x1 || test x$enable_nistp384 = x1 || \
 	    test x$enable_nistp521 = x1; then
 		AC_DEFINE(OPENSSL_HAS_ECC, [1], [OpenSSL has ECC])
-		AC_CHECK_FUNCS([EC_KEY_METHOD_new])
+		AC_CHECK_FUNCS([sunw_EC_KEY_METHOD_new])
 		openssl_ecc=yes
 	else
 		openssl_ecc=no
diff --git a/digest-openssl.c b/digest-openssl.c
index e073a807..c0bf66d6 100644
--- a/digest-openssl.c
+++ b/digest-openssl.c
@@ -32,13 +32,13 @@
 #include "digest.h"
 #include "ssherr.h"
 
-#ifndef HAVE_EVP_SHA256
+#ifndef HAVE_SUNW_EVP_SHA256
 # define EVP_sha256 NULL
 #endif
-#ifndef HAVE_EVP_SHA384
+#ifndef HAVE_SUNW_EVP_SHA384
 # define EVP_sha384 NULL
 #endif
-#ifndef HAVE_EVP_SHA512
+#ifndef HAVE_SUNW_EVP_SHA512
 # define EVP_sha512 NULL
 #endif
 
diff --git a/kex.c b/kex.c
index b4e2ab75..4952f7b6 100644
--- a/kex.c
+++ b/kex.c
@@ -95,9 +95,9 @@ static const struct kexalg kexalgs[] = {
 	{ KEX_DH16_SHA512, KEX_DH_GRP16_SHA512, 0, SSH_DIGEST_SHA512 },
 	{ KEX_DH18_SHA512, KEX_DH_GRP18_SHA512, 0, SSH_DIGEST_SHA512 },
 	{ KEX_DHGEX_SHA1, KEX_DH_GEX_SHA1, 0, SSH_DIGEST_SHA1 },
-#ifdef HAVE_EVP_SHA256
+#ifdef HAVE_SUNW_EVP_SHA256
 	{ KEX_DHGEX_SHA256, KEX_DH_GEX_SHA256, 0, SSH_DIGEST_SHA256 },
-#endif /* HAVE_EVP_SHA256 */
+#endif /* HAVE_SUNW_EVP_SHA256 */
 #ifdef OPENSSL_HAS_ECC
 	{ KEX_ECDH_SHA2_NISTP256, KEX_ECDH_SHA2,
 	    NID_X9_62_prime256v1, SSH_DIGEST_SHA256 },
@@ -109,14 +109,14 @@ static const struct kexalg kexalgs[] = {
 # endif /* OPENSSL_HAS_NISTP521 */
 #endif /* OPENSSL_HAS_ECC */
 #endif /* WITH_OPENSSL */
-#if defined(HAVE_EVP_SHA256) || !defined(WITH_OPENSSL)
+#if defined(HAVE_SUNW_EVP_SHA256) || !defined(WITH_OPENSSL)
 	{ KEX_CURVE25519_SHA256, KEX_C25519_SHA256, 0, SSH_DIGEST_SHA256 },
 	{ KEX_CURVE25519_SHA256_OLD, KEX_C25519_SHA256, 0, SSH_DIGEST_SHA256 },
 #ifdef USE_SNTRUP761X25519
 	{ KEX_SNTRUP761X25519_SHA512, KEX_KEM_SNTRUP761X25519_SHA512, 0,
 	    SSH_DIGEST_SHA512 },
 #endif
-#endif /* HAVE_EVP_SHA256 || !WITH_OPENSSL */
+#endif /* HAVE_SUNW_EVP_SHA256 || !WITH_OPENSSL */
 	{ NULL, 0, -1, -1},
 };
 
diff --git a/openbsd-compat/libressl-api-compat.c b/openbsd-compat/libressl-api-compat.c
index 59be1739..543e11f8 100644
--- a/openbsd-compat/libressl-api-compat.c
+++ b/openbsd-compat/libressl-api-compat.c
@@ -25,7 +25,7 @@
 
 #include <openssl/evp.h>
 
-#ifndef HAVE_EVP_CIPHER_CTX_GET_IV
+#ifndef HAVE_SUNW_EVP_CIPHER_CTX_GET_IV
 int
 EVP_CIPHER_CTX_get_iv(const EVP_CIPHER_CTX *ctx, unsigned char *iv, size_t len)
 {
@@ -44,17 +44,17 @@ EVP_CIPHER_CTX_get_iv(const EVP_CIPHER_CTX *ctx, unsigned char *iv, size_t len)
 	if (len != 0) {
 		if (iv == NULL)
 			return 0;
-# ifdef HAVE_EVP_CIPHER_CTX_IV
+# ifdef HAVE_SUNW_EVP_CIPHER_CTX_IV
 		memcpy(iv, EVP_CIPHER_CTX_iv(ctx), len);
 # else
 		memcpy(iv, ctx->iv, len);
-# endif /* HAVE_EVP_CIPHER_CTX_IV */
+# endif /* HAVE_SUNW_EVP_CIPHER_CTX_IV */
 	}
 	return 1;
 }
-#endif /* HAVE_EVP_CIPHER_CTX_GET_IV */
+#endif /* HAVE_SUNW_EVP_CIPHER_CTX_GET_IV */
 
-#ifndef HAVE_EVP_CIPHER_CTX_SET_IV
+#ifndef HAVE_SUNW_EVP_CIPHER_CTX_SET_IV
 int
 EVP_CIPHER_CTX_set_iv(EVP_CIPHER_CTX *ctx, const unsigned char *iv, size_t len)
 {
@@ -73,14 +73,14 @@ EVP_CIPHER_CTX_set_iv(EVP_CIPHER_CTX *ctx, const unsigned char *iv, size_t len)
 	if (len != 0) {
 		if (iv == NULL)
 			return 0;
-# ifdef HAVE_EVP_CIPHER_CTX_IV_NOCONST
+# ifdef HAVE_SUNW_EVP_CIPHER_CTX_IV_NOCONST
 		memcpy(EVP_CIPHER_CTX_iv_noconst(ctx), iv, len);
 # else
 		memcpy(ctx->iv, iv, len);
-# endif /* HAVE_EVP_CIPHER_CTX_IV_NOCONST */
+# endif /* HAVE_SUNW_EVP_CIPHER_CTX_IV_NOCONST */
 	}
 	return 1;
 }
-#endif /* HAVE_EVP_CIPHER_CTX_SET_IV */
+#endif /* HAVE_SUNW_EVP_CIPHER_CTX_SET_IV */
 
 #endif /* WITH_OPENSSL */
diff --git a/openbsd-compat/openssl-compat.h b/openbsd-compat/openssl-compat.h
index f6796b3b..9a333d64 100644
--- a/openbsd-compat/openssl-compat.h
+++ b/openbsd-compat/openssl-compat.h
@@ -64,19 +64,19 @@ void ssh_libcrypto_init(void);
 # define BN_set_flags(a, b)
 #endif
 
-#ifndef HAVE_EVP_CIPHER_CTX_GET_IV
-# ifdef HAVE_EVP_CIPHER_CTX_GET_UPDATED_IV
+#ifndef HAVE_SUNW_EVP_CIPHER_CTX_GET_IV
+# ifdef HAVE_SUNW_EVP_CIPHER_CTX_GET_UPDATED_IV
 #  define EVP_CIPHER_CTX_get_iv EVP_CIPHER_CTX_get_updated_iv
-# else /* HAVE_EVP_CIPHER_CTX_GET_UPDATED_IV */
+# else /* HAVE_SUNW_EVP_CIPHER_CTX_GET_UPDATED_IV */
 int EVP_CIPHER_CTX_get_iv(const EVP_CIPHER_CTX *ctx,
     unsigned char *iv, size_t len);
-# endif /* HAVE_EVP_CIPHER_CTX_GET_UPDATED_IV */
-#endif /* HAVE_EVP_CIPHER_CTX_GET_IV */
+# endif /* HAVE_SUNW_EVP_CIPHER_CTX_GET_UPDATED_IV */
+#endif /* HAVE_SUNW_EVP_CIPHER_CTX_GET_IV */
 
-#ifndef HAVE_EVP_CIPHER_CTX_SET_IV
+#ifndef HAVE_SUNW_EVP_CIPHER_CTX_SET_IV
 int EVP_CIPHER_CTX_set_iv(EVP_CIPHER_CTX *ctx,
     const unsigned char *iv, size_t len);
-#endif /* HAVE_EVP_CIPHER_CTX_SET_IV */
+#endif /* HAVE_SUNW_EVP_CIPHER_CTX_SET_IV */
 
 #endif /* WITH_OPENSSL */
 #endif /* _OPENSSL_COMPAT_H */
-- 
2.34.1

