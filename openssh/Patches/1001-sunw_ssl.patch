From 407a9de12a752ba1b38c92445620e655828f2bf2 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Tue, 22 Dec 2015 14:31:25 -0800
Subject: [PATCH 35/35] SmartOS local: use sunw_ssl lib from platform

---
 configure.ac                    | 98 ++++++++++++++++-----------------
 digest-openssl.c                |  8 +--
 kex.c                           | 16 ++++--
 mac.c                           |  4 +-
 myproposal.h                    |  4 +-
 openbsd-compat/openssl-compat.h |  4 +-
 openbsd-compat/sha2.c           |  2 +-
 openbsd-compat/sha2.h           |  2 +-
 8 files changed, 73 insertions(+), 65 deletions(-)

diff --git a/configure.ac b/configure.ac
index adc373bc..886e5236 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2616,8 +2616,8 @@ AC_ARG_WITH([ssl-engine],
 )
 
 if test "x$openssl" = "xyes" ; then
-	LIBS="-lcrypto $LIBS"
-	AC_TRY_LINK_FUNC([RAND_add], [AC_DEFINE([HAVE_OPENSSL], [1],
+	LIBS="-lsunw_crypto $LIBS"
+	AC_TRY_LINK_FUNC([sunw_RAND_add], [AC_DEFINE([HAVE_OPENSSL], [1],
 		[Define if your ssl headers are included
 		with #include <openssl/header.h>])],
 		[
@@ -2630,7 +2630,7 @@ if test "x$openssl" = "xyes" ; then
 			CPPFLAGS="-I/usr/local/ssl/include ${saved_CPPFLAGS}"
 			AC_CHECK_HEADER([openssl/opensslv.h], ,
 			    [AC_MSG_ERROR([*** OpenSSL headers missing - please install first or check config.log ***])])
-			AC_TRY_LINK_FUNC([RAND_add], [AC_DEFINE([HAVE_OPENSSL])],
+			AC_TRY_LINK_FUNC([sunw_RAND_add], [AC_DEFINE([HAVE_OPENSSL])],
 				[
 					AC_MSG_ERROR([*** Can't find recent OpenSSL libcrypto (see config.log for details) ***])
 				]
@@ -2787,16 +2787,16 @@ if test "x$openssl" = "xyes" ; then
 	)
 
 	AC_CHECK_FUNCS([ \
-		BN_is_prime_ex \
-		DSA_generate_parameters_ex \
-		EVP_DigestInit_ex \
-		EVP_DigestFinal_ex \
-		EVP_MD_CTX_init \
-		EVP_MD_CTX_cleanup \
-		EVP_MD_CTX_copy_ex \
-		HMAC_CTX_init \
-		RSA_generate_key_ex \
-		RSA_get_default_method \
+		sunw_BN_is_prime_ex \
+		sunw_DSA_generate_parameters_ex \
+		sunw_EVP_DigestInit_ex \
+		sunw_EVP_DigestFinal_ex \
+		sunw_EVP_MD_CTX_init \
+		sunw_EVP_MD_CTX_cleanup \
+		sunw_EVP_MD_CTX_copy_ex \
+		sunw_HMAC_CTX_init \
+		sunw_RSA_generate_key_ex \
+		sunw_RSA_get_default_method \
 	])
 
 	if test "x$openssl_engine" = "xyes" ; then
@@ -2882,116 +2882,116 @@ if test "x$openssl" = "xyes" ; then
 		]
 	)
 
-	AC_SEARCH_LIBS([EVP_CIPHER_CTX_ctrl], [crypto],
+	AC_SEARCH_LIBS([sunw_EVP_CIPHER_CTX_ctrl], [sunw_crypto],
 		[AC_DEFINE([HAVE_EVP_CIPHER_CTX_CTRL], [1],
 		    [Define if libcrypto has EVP_CIPHER_CTX_ctrl])])
 
 	# LibreSSL/OpenSSL 1.1x API
-	AC_SEARCH_LIBS([DH_get0_key], [crypto],
+	AC_SEARCH_LIBS([sunw_DH_get0_key], [sunw_crypto],
 		[AC_DEFINE([HAVE_DH_GET0_KEY], [1],
 		    [Define if libcrypto has DH_get0_key])])
-	AC_SEARCH_LIBS([DH_get0_pqg], [crypto],
+	AC_SEARCH_LIBS([sunw_DH_get0_pqg], [sunw_crypto],
 		[AC_DEFINE([HAVE_DH_GET0_PQG], [1],
 		    [Define if libcrypto has DH_get0_pqg])])
-	AC_SEARCH_LIBS([DH_set0_key], [crypto],
+	AC_SEARCH_LIBS([sunw_DH_set0_key], [sunw_crypto],
 		[AC_DEFINE([HAVE_DH_SET0_KEY], [1],
 		    [Define if libcrypto has DH_set0_key])])
-	AC_SEARCH_LIBS([DH_set_length], [crypto],
+	AC_SEARCH_LIBS([sunw_DH_set_length], [sunw_crypto],
 		[AC_DEFINE([HAVE_DH_SET_LENGTH], [1],
 		    [Define if libcrypto has DH_set_length])])
-	AC_SEARCH_LIBS([DH_set0_pqg], [crypto],
+	AC_SEARCH_LIBS([sunw_DH_set0_pqg], [sunw_crypto],
 		[AC_DEFINE([HAVE_DH_SET0_PQG], [1],
 		    [Define if libcrypto has DH_set0_pqg])])
 
-	AC_SEARCH_LIBS([DSA_get0_key], [crypto],
+	AC_SEARCH_LIBS([sunw_DSA_get0_key], [sunw_crypto],
 		[AC_DEFINE([HAVE_DSA_GET0_KEY], [1],
 		    [Define if libcrypto has DSA_get0_key])])
-	AC_SEARCH_LIBS([DSA_get0_pqg], [crypto],
+	AC_SEARCH_LIBS([sunw_DSA_get0_pqg], [sunw_crypto],
 		[AC_DEFINE([HAVE_DSA_GET0_PQG], [1],
 		    [Define if libcrypto has DSA_get0_pqg])])
-	AC_SEARCH_LIBS([DSA_set0_key], [crypto],
+	AC_SEARCH_LIBS([sunw_DSA_set0_key], [sunw_crypto],
 		[AC_DEFINE([HAVE_DSA_SET0_KEY], [1],
 		    [Define if libcrypto has DSA_set0_key])])
-	AC_SEARCH_LIBS([DSA_set0_pqg], [crypto],
+	AC_SEARCH_LIBS([sunw_DSA_set0_pqg], [sunw_crypto],
 		[AC_DEFINE([HAVE_DSA_SET0_PQG], [1],
 		    [Define if libcrypto has DSA_set0_pqg])])
 
-	AC_SEARCH_LIBS([DSA_SIG_get0], [crypto],
+	AC_SEARCH_LIBS([sunw_DSA_SIG_get0], [sunw_crypto],
 		[AC_DEFINE([HAVE_DSA_SIG_GET0], [1],
 		    [Define if libcrypto has DSA_SIG_get0])])
-	AC_SEARCH_LIBS([DSA_SIG_set0], [crypto],
+	AC_SEARCH_LIBS([sunw_DSA_SIG_set0], [sunw_crypto],
 		[AC_DEFINE([HAVE_DSA_SIG_SET0], [1],
 		    [Define if libcrypto has DSA_SIG_set0])])
 
-	AC_SEARCH_LIBS([ECDSA_SIG_get0], [crypto],
+	AC_SEARCH_LIBS([sunw_ECDSA_SIG_get0], [sunw_crypto],
 		[AC_DEFINE([HAVE_ECDSA_SIG_GET0], [1],
 		    [Define if libcrypto has ECDSA_SIG_get0])])
-	AC_SEARCH_LIBS([ECDSA_SIG_set0], [crypto],
+	AC_SEARCH_LIBS([sunw_ECDSA_SIG_set0], [sunw_crypto],
 		[AC_DEFINE([HAVE_ECDSA_SIG_SET0], [1],
 		    [Define if libcrypto has ECDSA_SIG_set0])])
 
-	AC_SEARCH_LIBS([EVP_CIPHER_CTX_iv], [crypto],
+	AC_SEARCH_LIBS([sunw_EVP_CIPHER_CTX_iv], [sunw_crypto],
 		[AC_DEFINE([HAVE_EVP_CIPHER_CTX_IV], [1],
 		    [Define if libcrypto has EVP_CIPHER_CTX_iv])])
-	AC_SEARCH_LIBS([EVP_CIPHER_CTX_iv_noconst], [crypto],
+	AC_SEARCH_LIBS([sunw_EVP_CIPHER_CTX_iv_noconst], [sunw_crypto],
 		[AC_DEFINE([HAVE_EVP_CIPHER_CTX_IV_NOCONST], [1],
 		    [Define if libcrypto has EVP_CIPHER_CTX_iv_noconst])])
-	AC_SEARCH_LIBS([EVP_CIPHER_CTX_get_iv], [crypto],
+	AC_SEARCH_LIBS([sunw_EVP_CIPHER_CTX_get_iv], [sunw_crypto],
 		[AC_DEFINE([HAVE_EVP_CIPHER_CTX_GET_IV], [1],
 		    [Define if libcrypto has EVP_CIPHER_CTX_get_iv])])
-	AC_SEARCH_LIBS([EVP_CIPHER_CTX_set_iv], [crypto],
+	AC_SEARCH_LIBS([sunw_EVP_CIPHER_CTX_set_iv], [sunw_crypto],
 		[AC_DEFINE([HAVE_EVP_CIPHER_CTX_GET_IV], [1],
 		    [Define if libcrypto has EVP_CIPHER_CTX_set_iv])])
 
-	AC_SEARCH_LIBS([RSA_get0_crt_params], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_get0_crt_params], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_GET0_CRT_PARAMS], [1],
 		    [Define if libcrypto has RSA_get0_crt_params])])
-	AC_SEARCH_LIBS([RSA_get0_factors], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_get0_factors], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_GET0_FACTORS], [1],
 		    [Define if libcrypto has RSA_get0_factors])])
-	AC_SEARCH_LIBS([RSA_get0_key], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_get0_key], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_GET0_KEY], [1],
 		    [Define if libcrypto has RSA_get0_key])])
-	AC_SEARCH_LIBS([RSA_set0_crt_params], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_set0_crt_params], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_SET0_CRT_PARAMS], [1],
 		    [Define if libcrypto has RSA_get0_srt_params])])
-	AC_SEARCH_LIBS([RSA_set0_factors], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_set0_factors], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_SET0_FACTORS], [1],
 		    [Define if libcrypto has RSA_set0_factors])])
-	AC_SEARCH_LIBS([RSA_set0_key], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_set0_key], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_SET0_KEY], [1],
 		    [Define if libcrypto has RSA_set0_key])])
 
-	AC_SEARCH_LIBS([RSA_meth_free], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_meth_free], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_METH_FREE], [1],
 		    [Define if libcrypto has RSA_meth_free])])
-	AC_SEARCH_LIBS([RSA_meth_dup], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_meth_dup], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_METH_DUP], [1],
 		    [Define if libcrypto has RSA_meth_dup])])
-	AC_SEARCH_LIBS([RSA_meth_set1_name], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_meth_set1_name], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_METH_SET1_NAME], [1],
 		    [Define if libcrypto has RSA_meth_set1_name])])
-	AC_SEARCH_LIBS([RSA_meth_get_finish], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_meth_get_finish], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_METH_GET_FINISH], [1],
 		    [Define if libcrypto has RSA_meth_get_finish])])
-	AC_SEARCH_LIBS([RSA_meth_set_priv_enc], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_meth_set_priv_enc], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_METH_SET_PRIV_ENC], [1],
 		    [Define if libcrypto has RSA_meth_set_priv_enc])])
-	AC_SEARCH_LIBS([RSA_meth_set_priv_dec], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_meth_set_priv_dec], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_METH_SET_PRIV_DEC], [1],
 		    [Define if libcrypto has RSA_meth_set_priv_dec])])
-	AC_SEARCH_LIBS([RSA_meth_set_finish], [crypto],
+	AC_SEARCH_LIBS([sunw_RSA_meth_set_finish], [sunw_crypto],
 		[AC_DEFINE([HAVE_RSA_METH_SET_FINISH], [1],
 		    [Define if libcrypto has RSA_meth_set_finish])])
 
-	AC_SEARCH_LIBS([EVP_PKEY_get0_RSA], [crypto],
+	AC_SEARCH_LIBS([sunw_EVP_PKEY_get0_RSA], [sunw_crypto],
 		[AC_DEFINE([HAVE_EVP_PKEY_GET0_RSA], [1],
 		    [Define if libcrypto has EVP_PKEY_get0_RSA])])
 
-	AC_SEARCH_LIBS([EVP_MD_CTX_new], [crypto],
+	AC_SEARCH_LIBS([sunw_EVP_MD_CTX_new], [sunw_crypto],
 		[AC_DEFINE([HAVE_EVP_MD_CTX_NEW], [1],
 		    [Define if libcrypto has EVP_MD_CTX_new])])
-	AC_SEARCH_LIBS([EVP_MD_CTX_free], [crypto],
+	AC_SEARCH_LIBS([sunw_EVP_MD_CTX_free], [sunw_crypto],
 		[AC_DEFINE([HAVE_EVP_MD_CTX_FREE], [1],
 		    [Define if libcrypto has EVP_MD_CTX_free])])
 
@@ -3028,7 +3028,7 @@ if test "x$openssl" = "xyes" ; then
 	AC_CHECK_FUNCS([crypt DES_crypt])
 
 	# Search for SHA256 support in libc and/or OpenSSL
-	AC_CHECK_FUNCS([SHA256_Update EVP_sha256], ,
+	AC_CHECK_FUNCS([sunw_SHA256_Update sunw_EVP_sha256], ,
 	    [unsupported_algorithms="$unsupported_algorithms \
 		hmac-sha2-256 \
 		hmac-sha2-512 \
@@ -3038,7 +3038,7 @@ if test "x$openssl" = "xyes" ; then
 	     ]
 	)
 	# Search for RIPE-MD support in OpenSSL
-	AC_CHECK_FUNCS([EVP_ripemd160], ,
+	AC_CHECK_FUNCS([sunw_EVP_ripemd160], ,
 	    [unsupported_algorithms="$unsupported_algorithms \
 		hmac-ripemd160 \
 		hmac-ripemd160@openssh.com \
diff --git a/digest-openssl.c b/digest-openssl.c
index da7ed72b..5833a3d1 100644
--- a/digest-openssl.c
+++ b/digest-openssl.c
@@ -32,14 +32,14 @@
 #include "digest.h"
 #include "ssherr.h"
 
-#ifndef HAVE_EVP_RIPEMD160
+#ifndef HAVE_SUNW_EVP_RIPEMD160
 # define EVP_ripemd160 NULL
-#endif /* HAVE_EVP_RIPEMD160 */
-#ifndef HAVE_EVP_SHA256
+#endif /* HAVE_SUNW_EVP_RIPEMD160 */
+#ifndef HAVE_SUNW_EVP_SHA256
 # define EVP_sha256 NULL
 # define EVP_sha384 NULL
 # define EVP_sha512 NULL
-#endif /* HAVE_EVP_SHA256 */
+#endif /* HAVE_SUNW_EVP_SHA256 */
 
 struct ssh_digest_ctx {
 	int alg;
diff --git a/kex.c b/kex.c
index fb5bfaea..49f6496f 100644
--- a/kex.c
+++ b/kex.c
@@ -58,6 +58,14 @@
 #include "ssh-gss.h"
 #endif
 
+#if OPENSSL_VERSION_NUMBER >= 0x00907000L
+# if defined(HAVE_SUNW_EVP_SHA256)
+# define evp_ssh_sha256 EVP_sha256
+# else
+extern const EVP_MD *evp_ssh_sha256(void);
+# endif
+#endif
+
 /* prototype */
 static int kex_choose_conf(struct ssh *);
 static int kex_input_newkeys(int, u_int32_t, struct ssh *);
@@ -89,9 +97,9 @@ static const struct kexalg kexalgs[] = {
 	{ KEX_DH16_SHA512, KEX_DH_GRP16_SHA512, 0, SSH_DIGEST_SHA512 },
 	{ KEX_DH18_SHA512, KEX_DH_GRP18_SHA512, 0, SSH_DIGEST_SHA512 },
 	{ KEX_DHGEX_SHA1, KEX_DH_GEX_SHA1, 0, SSH_DIGEST_SHA1 },
-#ifdef HAVE_EVP_SHA256
+#ifdef HAVE_SUNW_EVP_SHA256
 	{ KEX_DHGEX_SHA256, KEX_DH_GEX_SHA256, 0, SSH_DIGEST_SHA256 },
-#endif /* HAVE_EVP_SHA256 */
+#endif /* HAVE_SUNW_EVP_SHA256 */
 #ifdef OPENSSL_HAS_ECC
 	{ KEX_ECDH_SHA2_NISTP256, KEX_ECDH_SHA2,
 	    NID_X9_62_prime256v1, SSH_DIGEST_SHA256 },
@@ -103,10 +111,10 @@ static const struct kexalg kexalgs[] = {
 # endif /* OPENSSL_HAS_NISTP521 */
 #endif /* OPENSSL_HAS_ECC */
 #endif /* WITH_OPENSSL */
-#if defined(HAVE_EVP_SHA256) || !defined(WITH_OPENSSL)
+#if defined(HAVE_SUNW_EVP_SHA256) || !defined(WITH_OPENSSL)
 	{ KEX_CURVE25519_SHA256, KEX_C25519_SHA256, 0, SSH_DIGEST_SHA256 },
 	{ KEX_CURVE25519_SHA256_OLD, KEX_C25519_SHA256, 0, SSH_DIGEST_SHA256 },
-#endif /* HAVE_EVP_SHA256 || !WITH_OPENSSL */
+#endif /* HAVE_SUNW_EVP_SHA256 || !WITH_OPENSSL */
 	{ NULL, -1, -1, -1},
 };
 static const struct kexalg kexalg_prefixes[] = {
diff --git a/mac.c b/mac.c
index 51dc11d7..c11b6770 100644
--- a/mac.c
+++ b/mac.c
@@ -58,7 +58,7 @@ static const struct macalg macs[] = {
 	/* Encrypt-and-MAC (encrypt-and-authenticate) variants */
 	{ "hmac-sha1",				SSH_DIGEST, SSH_DIGEST_SHA1, 0, 0, 0, 0 },
 	{ "hmac-sha1-96",			SSH_DIGEST, SSH_DIGEST_SHA1, 96, 0, 0, 0 },
-#ifdef HAVE_EVP_SHA256
+#ifdef HAVE_SUNW_EVP_SHA256
 	{ "hmac-sha2-256",			SSH_DIGEST, SSH_DIGEST_SHA256, 0, 0, 0, 0 },
 	{ "hmac-sha2-512",			SSH_DIGEST, SSH_DIGEST_SHA512, 0, 0, 0, 0 },
 #endif
@@ -70,7 +70,7 @@ static const struct macalg macs[] = {
 	/* Encrypt-then-MAC variants */
 	{ "hmac-sha1-etm@openssh.com",		SSH_DIGEST, SSH_DIGEST_SHA1, 0, 0, 0, 1 },
 	{ "hmac-sha1-96-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA1, 96, 0, 0, 1 },
-#ifdef HAVE_EVP_SHA256
+#ifdef HAVE_SUNW_EVP_SHA256
 	{ "hmac-sha2-256-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA256, 0, 0, 0, 1 },
 	{ "hmac-sha2-512-etm@openssh.com",	SSH_DIGEST, SSH_DIGEST_SHA512, 0, 0, 0, 1 },
 #endif
diff --git a/myproposal.h b/myproposal.h
index 0df91f5b..45a6484b 100644
--- a/myproposal.h
+++ b/myproposal.h
@@ -66,7 +66,7 @@
 # define AESGCM_CIPHER_MODES
 #endif
 
-#ifdef HAVE_EVP_SHA256
+#ifdef HAVE_SUNW_EVP_SHA256
 # define KEX_SHA2_METHODS \
 	"diffie-hellman-group-exchange-sha256," \
 	"diffie-hellman-group16-sha512," \
@@ -83,7 +83,7 @@
 #endif
 
 #ifdef WITH_OPENSSL
-# ifdef HAVE_EVP_SHA256
+# ifdef HAVE_SUNW_EVP_SHA256
 #  define KEX_CURVE25519_METHODS \
 	"curve25519-sha256," \
 	"curve25519-sha256@libssh.org,"
diff --git a/openbsd-compat/openssl-compat.h b/openbsd-compat/openssl-compat.h
index 9e0264c0..c6a517ed 100644
--- a/openbsd-compat/openssl-compat.h
+++ b/openbsd-compat/openssl-compat.h
@@ -71,9 +71,9 @@ void ssh_aes_ctr_iv(EVP_CIPHER_CTX *, int, u_char *, size_t);
 # endif
 #endif
 
-#if defined(HAVE_EVP_RIPEMD160)
+#if defined(HAVE_SUNW_EVP_RIPEMD160)
 # if defined(OPENSSL_NO_RIPEMD) || defined(OPENSSL_NO_RMD160)
-#  undef HAVE_EVP_RIPEMD160
+#  undef HAVE_SUNW_EVP_RIPEMD160
 # endif
 #endif
 
diff --git a/openbsd-compat/sha2.c b/openbsd-compat/sha2.c
index b55ea30a..f1f96b2f 100644
--- a/openbsd-compat/sha2.c
+++ b/openbsd-compat/sha2.c
@@ -40,7 +40,7 @@
 
 #ifdef WITH_OPENSSL
 # include <openssl/opensslv.h>
-# if !defined(HAVE_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L)
+# if !defined(HAVE_SUNW_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L)
 #  define _NEED_SHA2 1
 # endif
 #else
diff --git a/openbsd-compat/sha2.h b/openbsd-compat/sha2.h
index c6e6c97a..313848f0 100644
--- a/openbsd-compat/sha2.h
+++ b/openbsd-compat/sha2.h
@@ -43,7 +43,7 @@
 
 #ifdef WITH_OPENSSL
 # include <openssl/opensslv.h>
-# if !defined(HAVE_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L)
+# if !defined(HAVE_SUNW_EVP_SHA256) && (OPENSSL_VERSION_NUMBER >= 0x00907000L)
 #  define _NEED_SHA2 1
 # endif
 #else
-- 
2.22.0

