From 851736f485d533b7df18d91eab609d769d79a868 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex.wilson@joyent.com>
Date: Fri, 4 Sep 2015 11:04:30 -0700
Subject: [PATCH 29/35] Accept and send LANG and LC_* environment variables by
 default

This preserves most of the old SunSSH locale negotiation
behaviour (at least the parts that are most commonly used).
---
 readconf.c    | 17 +++++++++++++++
 readconf.h    |  1 +
 servconf.c    | 59 +++++++++++++++++++++++++++++++++++++++++++++++++++
 session.c     | 25 ++++++++++++++++++++--
 ssh.c         |  2 ++
 sshd.c        |  2 ++
 sshd_config   |  4 ++++
 sshd_config.4 | 15 ++++++++++++-
 8 files changed, 122 insertions(+), 3 deletions(-)

diff --git a/readconf.c b/readconf.c
index 9421e434..ee6ed916 100644
--- a/readconf.c
+++ b/readconf.c
@@ -2024,6 +2024,23 @@ fill_default_options_for_canonicalization(Options *options)
 		options->canonicalize_hostname = SSH_CANONICALISE_NO;
 }
 
+void
+fill_early_default_options(Options *options)
+{
+	options->send_env = xrecallocarray(
+	    options->send_env, options->num_send_env,
+	    options->num_send_env + 8,
+	    sizeof(*options->send_env));
+	options->send_env[options->num_send_env++] = xstrdup("LANG");
+	options->send_env[options->num_send_env++] = xstrdup("LC_ALL");
+	options->send_env[options->num_send_env++] = xstrdup("LC_CTYPE");
+	options->send_env[options->num_send_env++] = xstrdup("LC_COLLATE");
+	options->send_env[options->num_send_env++] = xstrdup("LC_TIME");
+	options->send_env[options->num_send_env++] = xstrdup("LC_NUMERIC");
+	options->send_env[options->num_send_env++] = xstrdup("LC_MONETARY");
+	options->send_env[options->num_send_env++] = xstrdup("LC_MESSAGES");
+}
+
 /*
  * Called after processing other sources of option data, this fills those
  * options for which no value has been specified with their default values.
diff --git a/readconf.h b/readconf.h
index 8abfc09c..e94e1477 100644
--- a/readconf.h
+++ b/readconf.h
@@ -213,6 +213,7 @@ typedef struct {
 
 void     initialize_options(Options *);
 void     fill_default_options(Options *);
+void	 fill_early_default_options(Options *);
 void	 fill_default_options_for_canonicalization(Options *);
 int	 process_config_line(Options *, struct passwd *, const char *,
     const char *, char *, const char *, int, int *, int);
diff --git a/servconf.c b/servconf.c
index 41f10df7..c21bef1b 100644
--- a/servconf.c
+++ b/servconf.c
@@ -307,6 +307,22 @@ array_append(const char *file, const int line, const char *directive,
 	(*lp)++;
 }
 
+static void
+array_delete(const char *file, const int line, const char *directive,
+    char ***array, u_int *lp, const char *s)
+{
+	u_int i, j;
+	for (i = 0; i < *lp; ++i) {
+		if (strcmp((*array)[i], s) == 0) {
+			free((*array)[i]);
+			for (j = i + 1; j < *lp; ++j) {
+				(*array)[j - 1] = (*array)[j];
+			}
+			(*lp)--;
+		}
+	}
+}
+
 void
 servconf_add_hostkey(const char *file, const int line,
     ServerOptions *options, const char *path)
@@ -329,6 +345,36 @@ servconf_add_hostcert(const char *file, const int line,
 	free(apath);
 }
 
+void
+fill_early_default_server_options(ServerOptions *options)
+{
+	options->num_accept_env = 0;
+	array_append("[default]", 0, "AcceptEnv",
+	    &options->accept_env, &options->num_accept_env,
+	    "LANG");
+	array_append("[default]", 0, "AcceptEnv",
+	    &options->accept_env, &options->num_accept_env,
+	    "LC_ALL");
+	array_append("[default]", 0, "AcceptEnv",
+	    &options->accept_env, &options->num_accept_env,
+	    "LC_CTYPE");
+	array_append("[default]", 0, "AcceptEnv",
+	    &options->accept_env, &options->num_accept_env,
+	    "LC_COLLATE");
+	array_append("[default]", 0, "AcceptEnv",
+	    &options->accept_env, &options->num_accept_env,
+	    "LC_TIME");
+	array_append("[default]", 0, "AcceptEnv",
+	    &options->accept_env, &options->num_accept_env,
+	    "LC_NUMERIC");
+	array_append("[default]", 0, "AcceptEnv",
+	    &options->accept_env, &options->num_accept_env,
+	    "LC_MONETARY");
+	array_append("[default]", 0, "AcceptEnv",
+	    &options->accept_env, &options->num_accept_env,
+	    "LC_MESSAGES");
+}
+
 void
 fill_default_server_options(ServerOptions *options)
 {
@@ -2018,6 +2064,19 @@ process_server_config_line(ServerOptions *options, char *line,
 				    filename, linenum);
 			if (!*activep)
 				continue;
+			if (arg[0] == '-') {
+				array_delete(filename, linenum, "AcceptEnv",
+				    &options->accept_env,
+				    &options->num_accept_env,
+				    &arg[1]);
+				break;
+			}
+			if (strcmp(arg, "none") == 0) {
+				u_int j;
+				for (j = 0; j < options->num_accept_env; ++j)
+					free(options->accept_env[j]);
+				options->num_accept_env = 0;
+			}
 			array_append(filename, linenum, "AcceptEnv",
 			    &options->accept_env, &options->num_accept_env,
 			    arg);
diff --git a/session.c b/session.c
index 4003d91c..ad2aeea6 100644
--- a/session.c
+++ b/session.c
@@ -877,6 +877,18 @@ check_quietlogin(Session *s, const char *command)
 	return 0;
 }
 
+/*
+ * If the given environment variable is set in the daemon's environment,
+ * push it into the new child as well. If it is unset, do nothing.
+ */
+static void
+child_inherit_env(char ***envp, u_int *envsizep, const char *name)
+{
+	char *value;
+	if ((value = getenv(name)) != NULL)
+		child_set_env(envp, envsizep, name, value);
+}
+
 /*
  * Reads environment variables from the given file and adds/overrides them
  * into the environment.  If the file does not exist, this does nothing.
@@ -1057,6 +1069,16 @@ do_setup_env(struct ssh *ssh, Session *s, const char *shell)
 	ssh_gssapi_do_child(&env, &envsize);
 #endif
 
+	/* Default to the system-wide locale/language settings. */
+	child_inherit_env(&env, &envsize, "LANG");
+	child_inherit_env(&env, &envsize, "LC_ALL");
+	child_inherit_env(&env, &envsize, "LC_CTYPE");
+	child_inherit_env(&env, &envsize, "LC_COLLATE");
+	child_inherit_env(&env, &envsize, "LC_TIME");
+	child_inherit_env(&env, &envsize, "LC_NUMERIC");
+	child_inherit_env(&env, &envsize, "LC_MONETARY");
+	child_inherit_env(&env, &envsize, "LC_MESSAGES");
+
 	/* Set basic environment. */
 	for (i = 0; i < s->num_env; i++)
 		child_set_env(&env, &envsize, s->env[i].name, s->env[i].val);
@@ -1097,8 +1119,7 @@ do_setup_env(struct ssh *ssh, Session *s, const char *shell)
 	/* Normal systems set SHELL by default. */
 	child_set_env(&env, &envsize, "SHELL", shell);
 
-	if (getenv("TZ"))
-		child_set_env(&env, &envsize, "TZ", getenv("TZ"));
+	child_inherit_env(&env, &envsize, "TZ");
 
 #ifdef PER_SESSION_XAUTHFILE
         if (s->auth_file != NULL)
diff --git a/ssh.c b/ssh.c
index 0777c31e..47e20065 100644
--- a/ssh.c
+++ b/ssh.c
@@ -1091,6 +1091,8 @@ main(int ac, char **av)
 #endif
 		);
 
+	fill_early_default_options(&options);
+
 	/* Parse the configuration files */
 	process_config_files(host_arg, pw, 0);
 
diff --git a/sshd.c b/sshd.c
index e09f3934..9654b041 100644
--- a/sshd.c
+++ b/sshd.c
@@ -1679,6 +1679,8 @@ main(int ac, char **av)
 	else if (strcasecmp(config_file_name, "none") != 0)
 		load_server_config(config_file_name, cfg);
 
+	fill_early_default_server_options(&options);
+
 	parse_server_config(&options, rexeced_flag ? "rexec" : config_file_name,
 	    cfg, NULL);
 
diff --git a/sshd_config b/sshd_config
index d8e5e74b..6184ab75 100644
--- a/sshd_config
+++ b/sshd_config
@@ -26,6 +26,10 @@ Port 22
 SyslogFacility AUTH
 LogLevel INFO
 
+# Use the client's locale/language settings
+#AcceptEnv LANG LC_ALL LC_CTYPE LC_COLLATE LC_TIME LC_NUMERIC
+#AcceptEnv LC_MONETARY LC_MESSAGES
+
 # Authentication:
 
 #LoginGraceTime 2m
diff --git a/sshd_config.4 b/sshd_config.4
index c652f116..0fcf9368 100644
--- a/sshd_config.4
+++ b/sshd_config.4
@@ -86,7 +86,20 @@ directives.
 Be warned that some environment variables could be used to bypass restricted
 user environments.
 For this reason, care should be taken in the use of this directive.
-The default is not to accept any environment variables.
+The default is to accept only
+.Ev LANG
+and the
+.Ev LC_*
+family of environment variables. If you wish to remove one of these default
+variables, you may either use the argument
+.Dq none
+first to remove all of them, or prefix specific variable names with a
+.Dq -
+character (e.g.
+.Dq -LANG
+). Otherwise any specified
+.cm AcceptEnv
+directives will add to this default set.
 .It Cm AddressFamily
 Specifies which address family should be used by
 .Xr sshd 1M .
-- 
2.22.0

